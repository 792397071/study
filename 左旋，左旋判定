void reverse(char* left, char* right)
{
	assert(left);
	assert(right);
	while (left < right)		//当左边小于右边，进行逆序循环
	{
		int tem = *left;
		*left = *right;
		*right = tem;
		left++;
		right--;
	}
}



void LX(char* arr, int k)
{
	int len = strlen(arr);
	assert(k < len);
	reverse(arr,arr+k-1); //逆序左边；
	reverse(arr+k,arr+len-1); //逆序右边；
	reverse(arr,arr+len-1); //整体逆序；
}

int IFLX(char* arr1, char* arr2)
{
	int len=strlen(arr1);
	for (int i = 0; i < len; i++)
	{
		LX(arr1, 1);
		int ret = strcmp(arr1, arr2);    //strcmp相等返回0，两个字符串的比较
		if (ret == 0)
			return 1;
	}
	return 0;
}
int main()
{
	char arr[] = "ABCDEF";
	char arr2[] = "tDEFAB";
	int ret = IFLX(arr, arr2);
	if (ret==1)
	printf("是旋转后的\n");
	if (ret == 0)
	printf("不是旋转后得到的\n");
}
